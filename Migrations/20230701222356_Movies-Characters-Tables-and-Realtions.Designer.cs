// <auto-generated />
using System;
using FirstWebApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FirstWebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230701222356_Movies-Characters-Tables-and-Realtions")]
    partial class MoviesCharactersTablesandRealtions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FirstWebApi.Models.Genre", b =>
                {
                    b.Property<byte>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("MoviesApi.Models.Character", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("MoviesApi.Models.CharacterInMovie", b =>
                {
                    b.Property<int>("MovieID")
                        .HasColumnType("int");

                    b.Property<int>("CharacterID")
                        .HasColumnType("int");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.HasKey("MovieID", "CharacterID");

                    b.HasIndex("CharacterID");

                    b.ToTable("CharactersInMovies");
                });

            modelBuilder.Entity("MoviesApi.Models.Movie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<byte>("GenreID")
                        .HasColumnType("tinyint");

                    b.Property<byte[]>("Poster")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<double>("Rate")
                        .HasPrecision(2, 1)
                        .HasColumnType("float(2)");

                    b.Property<string>("StoryLine")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Year")
                        .HasMaxLength(9999)
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GenreID");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MoviesApi.Models.Character", b =>
                {
                    b.OwnsOne("MoviesApi.Models.Name", "CharacterName", b1 =>
                        {
                            b1.Property<int>("CharacterID")
                                .HasColumnType("int");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LastName")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CharacterID");

                            b1.ToTable("Characters");

                            b1.WithOwner()
                                .HasForeignKey("CharacterID");
                        });

                    b.Navigation("CharacterName")
                        .IsRequired();
                });

            modelBuilder.Entity("MoviesApi.Models.CharacterInMovie", b =>
                {
                    b.HasOne("MoviesApi.Models.Character", "Character")
                        .WithMany("CharacterActInMovies")
                        .HasForeignKey("CharacterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesApi.Models.Movie", "Movie")
                        .WithMany("CharacterActInMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoviesApi.Models.Movie", b =>
                {
                    b.HasOne("FirstWebApi.Models.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("FirstWebApi.Models.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("MoviesApi.Models.Character", b =>
                {
                    b.Navigation("CharacterActInMovies");
                });

            modelBuilder.Entity("MoviesApi.Models.Movie", b =>
                {
                    b.Navigation("CharacterActInMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
